import { bigint, boolean, customType, date, integer, numeric, pgTable, timestamp, varchar } from "drizzle-orm/pg-core";

const bytea = customType<{ data: Buffer; notNull: false; default: false }>({
  dataType() {
    return "bytea";
  },
});

export const vwTopicCodeLinks = pgTable("vwTopicCodeLinks", {
	id: integer("id"),
	topiccodeid: integer("topiccodeid"),
	topiccodeid_name: varchar("topiccodeid_name"),
	entityid: integer("entityid"),
	recordid: integer("recordid"),
	recordname: varchar("recordname"),
	Value: varchar("Value"),
	status: varchar("status"),
	dateadded: timestamp("dateadded", { mode: 'string' }),
});

export const vwPersons = pgTable("vwPersons", {
	id: integer("id"),
	namewcompany: varchar("namewcompany"),
	prefix: varchar("prefix"),
	firstname: varchar("firstname"),
	middlename: varchar("middlename"),
	lastname: varchar("lastname"),
	suffix: varchar("suffix"),
	firstlast: varchar("firstlast"),
	companyid: integer("companyid"),
	companyname: varchar("companyname"),
	company: varchar("company"),
	department: varchar("department"),
	title: varchar("title"),
	preferredaddress: varchar("preferredaddress"),
	preferredbillingaddress: varchar("preferredbillingaddress"),
	preferredshippingaddress: varchar("preferredshippingaddress"),
	addressid: integer("addressid"),
	addressline1: varchar("addressline1"),
	addressline2: varchar("addressline2"),
	addressline3: varchar("addressline3"),
	addressline4: varchar("addressline4"),
	city: varchar("city"),
	county: varchar("county"),
	state: varchar("state"),
	zipcode: varchar("zipcode"),
	zipcode5numeric: integer("zipcode5numeric"),
	country: varchar("country"),
	countrycodeid: integer("countrycodeid"),
	preferredphone: varchar("preferredphone"),
	phoneid: integer("phoneid"),
	phonecountrycode: varchar("phonecountrycode"),
	phoneareacode: varchar("phoneareacode"),
	phone: varchar("phone"),
	phoneextension: varchar("phoneextension"),
	faxid: integer("faxid"),
	faxcountrycode: varchar("faxcountrycode"),
	faxareacode: varchar("faxareacode"),
	faxphone: varchar("faxphone"),
	cellphoneid: integer("cellphoneid"),
	cellcountrycode: varchar("cellcountrycode"),
	cellareacode: varchar("cellareacode"),
	cellphone: varchar("cellphone"),
	pagerphoneid: integer("pagerphoneid"),
	pagercountrycode: varchar("pagercountrycode"),
	pagerareacode: varchar("pagerareacode"),
	pagerphone: varchar("pagerphone"),
	pagerphoneextension: varchar("pagerphoneextension"),
	email: varchar("email"),
	email1: varchar("email1"),
	email2: varchar("email2"),
	email3: varchar("email3"),
	billingaddressid: integer("billingaddressid"),
	billingaddressline1: varchar("billingaddressline1"),
	billingaddressline2: varchar("billingaddressline2"),
	billingaddressline3: varchar("billingaddressline3"),
	billingaddressline4: varchar("billingaddressline4"),
	billingcity: varchar("billingcity"),
	billingcounty: varchar("billingcounty"),
	billingstate: varchar("billingstate"),
	billingzipcode: varchar("billingzipcode"),
	billingcountrycodeid: integer("billingcountrycodeid"),
	billingcountry: varchar("billingcountry"),
	homeaddressid: integer("homeaddressid"),
	homeaddressline1: varchar("homeaddressline1"),
	homeaddressline2: varchar("homeaddressline2"),
	homeaddressline3: varchar("homeaddressline3"),
	homeaddressline4: varchar("homeaddressline4"),
	homecity: varchar("homecity"),
	homecounty: varchar("homecounty"),
	homestate: varchar("homestate"),
	homezipcode: varchar("homezipcode"),
	homecountry: varchar("homecountry"),
	homephoneid: integer("homephoneid"),
	homecountrycodeid: integer("homecountrycodeid"),
	homecountrycode: varchar("homecountrycode"),
	homeareacode: varchar("homeareacode"),
	homephone: varchar("homephone"),
	poboxaddressid: integer("poboxaddressid"),
	pobox: varchar("pobox"),
	poboxline2: varchar("poboxline2"),
	poboxline3: varchar("poboxline3"),
	poboxline4: varchar("poboxline4"),
	poboxcity: varchar("poboxcity"),
	poboxcounty: varchar("poboxcounty"),
	poboxstate: varchar("poboxstate"),
	poboxzipcode: varchar("poboxzipcode"),
	poboxcountrycodeid: integer("poboxcountrycodeid"),
	poboxcountry: varchar("poboxcountry"),
	socialsecurity: varchar("socialsecurity"),
	organizationid: integer("organizationid"),
	mainaccountmanager: integer("mainaccountmanager"),
	mainaccountmanagername: varchar("mainaccountmanagername"),
	ranking: integer("ranking"),
	referredby: integer("referredby"),
	referraltype: varchar("referraltype"),
	website: varchar("website"),
	birthday: timestamp("birthday", { mode: 'string' }),
	supervisor: varchar("supervisor"),
	assistantsname: varchar("assistantsname"),
	assistantsphoneid: integer("assistantsphoneid"),
	assistantscountrycode: varchar("assistantscountrycode"),
	assistantsareacode: varchar("assistantsareacode"),
	assistantsphone: varchar("assistantsphone"),
	assistantsextension: varchar("assistantsextension"),
	nickname: varchar("nickname"),
	gender: integer("gender"),
	spousename: varchar("spousename"),
	kids: varchar("kids"),
	importantdate1: timestamp("importantdate1", { mode: 'string' }),
	importantdescription1: varchar("importantdescription1"),
	importantdate2: timestamp("importantdate2", { mode: 'string' }),
	importantdescription2: varchar("importantdescription2"),
	importantdate3: timestamp("importantdate3", { mode: 'string' }),
	importantdescription3: varchar("importantdescription3"),
	atmosphere: varchar("atmosphere"),
	mailcode: varchar("mailcode"),
	crrt: varchar("crrt"),
	uscongress: varchar("uscongress"),
	statesenate: varchar("statesenate"),
	statehouse: varchar("statehouse"),
	countydistrict: varchar("countydistrict"),
	nextcontactdate: timestamp("nextcontactdate", { mode: 'string' }),
	mailexclude: boolean("mailexclude"),
	faxexclude: boolean("faxexclude"),
	emailexclude: boolean("emailexclude"),
	direxclude: boolean("direxclude"),
	prefcommmethodid: integer("prefcommmethodid"),
	contactmanagerid: varchar("contactmanagerid"),
	verifystatus: varchar("verifystatus"),
	functionaltitle: varchar("functionaltitle"),
	contactrank: varchar("contactrank"),
	dirrank: integer("dirrank"),
	primaryfunctionid: integer("primaryfunctionid"),
	primaryfunction: varchar("primaryfunction"),
	membertypeid: integer("membertypeid"),
	membertype: varchar("membertype"),
	joindate: timestamp("joindate", { mode: 'string' }),
	duespaidthru: timestamp("duespaidthru", { mode: 'string' }),
	lastduespaymentdate: timestamp("lastduespaymentdate", { mode: 'string' }),
	lastduesamount: numeric("lastduesamount", { precision: 19, scale:  4 }),
	terminationdate: timestamp("terminationdate", { mode: 'string' }),
	status: integer("status"),
	companymembertypeid: integer("companymembertypeid"),
	comembertype: varchar("comembertype"),
	companymembertype: varchar("companymembertype"),
	companyjoindate: timestamp("companyjoindate", { mode: 'string' }),
	companyduespaidthru: timestamp("companyduespaidthru", { mode: 'string' }),
	companylastduespaymentdate: timestamp("companylastduespaymentdate", { mode: 'string' }),
	companylastduesamount: numeric("companylastduesamount", { precision: 19, scale:  4 }),
	companyterminationdate: timestamp("companyterminationdate", { mode: 'string' }),
	oldid: varchar("oldid"),
	oldcompanyid: varchar("oldcompanyid"),
	glorderlevelid: integer("glorderlevelid"),
	glpaymentlevelid: integer("glpaymentlevelid"),
	creditstatusid: integer("creditstatusid"),
	creditlimit: numeric("creditlimit", { precision: 19, scale:  4 }),
	billingterms: varchar("billingterms"),
	apvendorid: varchar("apvendorid"),
	preferredcurrencytypeid: integer("preferredcurrencytypeid"),
	directions: varchar("directions"),
	Comments: varchar("Comments"),
	whocreated: varchar("whocreated"),
	whoupdated: varchar("whoupdated"),
	datecreated: timestamp("datecreated", { mode: 'string' }),
	dateupdated: timestamp("dateupdated", { mode: 'string' }),
	lastduesamountcurrencytypeid: integer("lastduesamountcurrencytypeid"),
	creditlimitcurrencytypeid: integer("creditlimitcurrencytypeid"),
	companylastduesamountcurrencytypeid: integer("companylastduesamountcurrencytypeid"),
	macpa_aicpanumber: varchar("macpa_aicpanumber"),
	macpa_aicpamember: varchar("macpa_aicpamember"),
	macpa_federaltaxid: varchar("macpa_federaltaxid"),
	macpa_minoritygroup: varchar("macpa_minoritygroup"),
	macpa_priorname: varchar("macpa_priorname"),
	macpa_region: varchar("macpa_region"),
	macpa_reinstatedate: timestamp("macpa_reinstatedate", { mode: 'string' }),
	macpa_badgecredentials: varchar("macpa_badgecredentials"),
	macpa_terminationreasonid: integer("macpa_terminationreasonid"),
	macpa_terminationreason: varchar("macpa_terminationreason"),
	macpa_legacy_bc: varchar("macpa_legacy_bc"),
	macpa_legacy_ty: varchar("macpa_legacy_ty"),
	macpa_legacy_me: varchar("macpa_legacy_me"),
	macpa_gendername: varchar("macpa_gendername"),
	macpa_secondaryjoindate: date("macpa_secondaryjoindate"),
	macpa_legacychapter: varchar("macpa_legacychapter"),
	macpa_speakerstatus: varchar("macpa_speakerstatus"),
	macpa_speakernotes: varchar("macpa_speakernotes"),
	macpa_bio: varchar("macpa_bio"),
	macpa_biolastupdated: timestamp("macpa_biolastupdated", { mode: 'string' }),
	macpa_memberstatus: varchar("macpa_memberstatus"),
	macpa_statustype: varchar("macpa_statustype"),
	cpastatecensus: varchar("cpastatecensus"),
	cpadistrictcode: varchar("cpadistrictcode"),
	cpadistricttypeid: integer("cpadistricttypeid"),
	cpadistricttype: varchar("cpadistricttype"),
	cpapoliticalpartyid: integer("cpapoliticalpartyid"),
	cpapoliticalparty: varchar("cpapoliticalparty"),
	cpalegislatorid: varchar("cpalegislatorid"),
	cpaisactivelegislator: integer("cpaisactivelegislator"),
	macpa_legacyuscongress: varchar("macpa_legacyuscongress"),
	macpa_legacystatesenate: varchar("macpa_legacystatesenate"),
	macpa_legacystatehouse: varchar("macpa_legacystatehouse"),
	macpa_cpetotalaa: numeric("macpa_cpetotalaa", { precision: 10, scale:  2 }),
	macpa_cpetotalet: numeric("macpa_cpetotalet", { precision: 10, scale:  2 }),
	macpa_cpetotalot: numeric("macpa_cpetotalot", { precision: 10, scale:  2 }),
	macpa_cpetotaldlaa: numeric("macpa_cpetotaldlaa", { precision: 10, scale:  2 }),
	macpa_cpetotaldlet: numeric("macpa_cpetotaldlet", { precision: 10, scale:  2 }),
	macpa_cpetotaldlot: numeric("macpa_cpetotaldlot", { precision: 10, scale:  2 }),
	macpa_cpetotal: numeric("macpa_cpetotal", { precision: 10, scale:  2 }),
	cpapersonalfaxid: integer("cpapersonalfaxid"),
	cpapersonalfaxcountrycode: varchar("cpapersonalfaxcountrycode"),
	cpapersonalfaxareacode: varchar("cpapersonalfaxareacode"),
	cpapersonalfaxphone: varchar("cpapersonalfaxphone"),
	macpa_creditmemototal: numeric("macpa_creditmemototal", { precision: 19, scale:  4 }),
	macpa_nosuggestedpac: boolean("macpa_nosuggestedpac"),
	macpa_pacagreementexemption: boolean("macpa_pacagreementexemption"),
	macpa_paccoalition: boolean("macpa_paccoalition"),
	macpa_companytype: varchar("macpa_companytype"),
	macpa_badgename: varchar("macpa_badgename"),
	macpa_pacribbon: varchar("macpa_pacribbon"),
	macpa_reviewerpr: boolean("macpa_reviewerpr"),
	macpa_technicalreviewerpr: boolean("macpa_technicalreviewerpr"),
	macpa_nopacdonations: boolean("macpa_nopacdonations"),
	macpa_fullname: varchar("macpa_fullname"),
	macpa_preferredaddressid: varchar("macpa_preferredaddressid"),
	macpa_preferredaddressline1: varchar("macpa_preferredaddressline1"),
	macpa_preferredaddressline2: varchar("macpa_preferredaddressline2"),
	macpa_preferredaddressline3: varchar("macpa_preferredaddressline3"),
	macpa_preferredaddressline4: varchar("macpa_preferredaddressline4"),
	macpa_preferredcity: varchar("macpa_preferredcity"),
	macpa_preferredstate: varchar("macpa_preferredstate"),
	macpa_preferredzip: varchar("macpa_preferredzip"),
	macpa_preferredcounty: varchar("macpa_preferredcounty"),
	macpa_preferredcountry: varchar("macpa_preferredcountry"),
	macpa_joindate: timestamp("macpa_joindate", { mode: 'string' }),
	ordertotal__fvc: numeric("ordertotal__fvc", { precision: 19, scale:  4 }),
	balancedue__fvc: numeric("balancedue__fvc", { precision: 19, scale:  4 }),
	macpa_balancedue: varchar("macpa_balancedue"),
	macpa_iscurrentlegislator: boolean("macpa_iscurrentlegislator"),
	macpa_legislatordistricttype: varchar("macpa_legislatordistricttype"),
	macpa_legislatordistrict: varchar("macpa_legislatordistrict"),
	macpa_legislatorid: integer("macpa_legislatorid"),
	macpa_legislativeprefix: varchar("macpa_legislativeprefix"),
	macpa_legislativesuffix: varchar("macpa_legislativesuffix"),
	macpa_legprintflag: varchar("macpa_legprintflag"),
	macpa_noteligibleformembership: boolean("macpa_noteligibleformembership"),
	photo: bytea("photo"),
	billingbadaddress: boolean("billingbadaddress"),
	homebadaddress: boolean("homebadaddress"),
	poboxbadaddress: boolean("poboxbadaddress"),
	businessbadaddress: boolean("businessbadaddress"),
	macpa_importsource: varchar("macpa_importsource"),
	macpa_currentushouse__c: varchar("macpa_currentushouse__c"),
	macpa_currentmisenate__c: varchar("macpa_currentmisenate__c"),
	macpa_currentmihouse__c: varchar("macpa_currentmihouse__c"),
	macpa_pastushouse__c: varchar("macpa_pastushouse__c"),
	macpa_pastmisenate__c: varchar("macpa_pastmisenate__c"),
	macpa_pastmihouse__c: varchar("macpa_pastmihouse__c"),
	// You can use { mode: "bigint" } if numbers are exceeding js number limitations
	kwpersonid: bigint("kwpersonid", { mode: "number" }),
	legislatorreviewrequired: boolean("legislatorreviewrequired"),
	externalaccountprofileurl: varchar("externalaccountprofileurl"),
	ignoresocialnetworkcompanydifferences: boolean("ignoresocialnetworkcompanydifferences"),
	ignoresocialnetworktitledifferences: boolean("ignoresocialnetworktitledifferences"),
	isgroupadmin: boolean("isgroupadmin"),
	macpa_ismember: boolean("macpa_ismember"),
	micpa_mailballot: boolean("micpa_mailballot"),
	micpa_duesmessage: varchar("micpa_duesmessage"),
	micpa_firmadmin: boolean("micpa_firmadmin"),
	micpa_excludefirmroster: boolean("micpa_excludefirmroster"),
	duesautoisactive__fvc: boolean("duesautoisactive__fvc"),
	cesscore: numeric("cesscore", { precision: 28, scale:  0 }),
	spacelinkhandle: varchar("spacelinkhandle"),
	statusname: varchar("statusname"),
	formattedaddress: varchar("formattedaddress"),
	formattedphone: varchar("formattedphone"),
	issystem: boolean("issystem"),
	micpa_importdate1: date("micpa_importdate1"),
	micpa_importdate2: date("micpa_importdate2"),
	micpa_formattedcellphone: varchar("micpa_formattedcellphone"),
	micpa_absorblmsid: varchar("micpa_absorblmsid"),
	estoreid: integer("estoreid"),
	vip_micpa: boolean("vip_micpa"),
	scholarshipwinner: boolean("scholarshipwinner"),
	micpa_peerreviewprofessional: boolean("micpa_peerreviewprofessional"),
	micpa_overridepac: numeric("micpa_overridepac", { precision: 19, scale:  4 }),
	originallicensedate_pb: timestamp("originallicensedate_pb", { mode: 'string' }),
});

export const vwPersonCPALicenses = pgTable("vwPersonCPALicenses", {
	id: integer("id"),
	personid: integer("personid"),
	Sequence: integer("Sequence"),
	licensetypeid: integer("licensetypeid"),
	licensetype: varchar("licensetype"),
	licenseno: varchar("licenseno"),
	licensedate: timestamp("licensedate", { mode: 'string' }),
	licensestate: varchar("licensestate"),
	licensestatusid: integer("licensestatusid"),
	licensestatus: varchar("licensestatus"),
	expirationdate: timestamp("expirationdate", { mode: 'string' }),
	micpa_larastatus: varchar("micpa_larastatus"),
	micpa_lastrenewaldate: timestamp("micpa_lastrenewaldate", { mode: 'string' }),
});

export const vwMeetingAttendees = pgTable("vwMeetingAttendees", {
	id: integer("id"),
	registrant: varchar("registrant"),
	company: varchar("company"),
	travellingfrom: varchar("travellingfrom"),
	arriving: timestamp("arriving", { mode: 'string' }),
	departing: timestamp("departing", { mode: 'string' }),
	airline: varchar("airline"),
	hotel: varchar("hotel"),
	orderid: integer("orderid"),
	meetingid: integer("meetingid"),
	actualmeetingid: integer("actualmeetingid"),
	namewcompany: varchar("namewcompany"),
});

export const vwEducationUnits = pgTable("vwEducationUnits", {
	id: integer("id"),
	personid: integer("personid"),
	person: varchar("person"),
	dateearned: timestamp("dateearned", { mode: 'string' }),
	dateexpires: timestamp("dateexpires", { mode: 'string' }),
	educationcategoryid: integer("educationcategoryid"),
	educationcategory: varchar("educationcategory"),
	primaryfunctionid: integer("primaryfunctionid"),
	primaryfunction: varchar("primaryfunction"),
	status: varchar("status"),
	educationunits: numeric("educationunits", { precision: 28, scale:  2 }),
	ordermeetingdetailid: integer("ordermeetingdetailid"),
	orderlineid: integer("orderlineid"),
	orderid: integer("orderid"),
	Sequence: integer("Sequence"),
	ordermeetingdetaileducationunitsid: integer("ordermeetingdetaileducationunitsid"),
	source: varchar("source"),
	externalsource: varchar("externalsource"),
	externalsourcedescription: varchar("externalsourcedescription"),
	externalsourceverified: boolean("externalsourceverified"),
	meetingid: integer("meetingid"),
	productid: integer("productid"),
	meeting: varchar("meeting"),
	macpa_legacyproductid: integer("macpa_legacyproductid"),
	auraselectdate: timestamp("auraselectdate", { mode: 'string' }),
	auradeactivate: boolean("auradeactivate"),
	auraexternalcpecity: varchar("auraexternalcpecity"),
	auraexternalcpesponsor: varchar("auraexternalcpesponsor"),
	auraexternalcpeinstructor: varchar("auraexternalcpeinstructor"),
	macpa_coursetype: varchar("macpa_coursetype"),
	macpa_carryover: boolean("macpa_carryover"),
	macpa_sponsorid: varchar("macpa_sponsorid"),
	macpa_comments: varchar("macpa_comments"),
	macpa_creditdate: timestamp("macpa_creditdate", { mode: 'string' }),
	macpa_productcategoryid: integer("macpa_productcategoryid"),
	webinarvendorid: integer("webinarvendorid"),
	macpa_penaltyhours: boolean("macpa_penaltyhours"),
	micpa_relicensure: boolean("micpa_relicensure"),
	datecreated: timestamp("datecreated", { mode: 'string' }),
	whocreated: varchar("whocreated"),
	dateupdated: timestamp("dateupdated", { mode: 'string' }),
	whoupdated: varchar("whoupdated"),
	estoreid: integer("estoreid"),
	classregistrationid: integer("classregistrationid"),
	score: numeric("score", { precision: 28, scale:  4 }),
});
